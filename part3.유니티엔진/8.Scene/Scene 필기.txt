[ Scene 매니저 #1 ]
씬을 관리하고, 씬에서 씬으로 이동하는 작업을 해보자.
이젠 각각 역할이 있는 scene들을 만들고, 그 역할(기능)을 수행하는 Scene Script들을 만들어 씬에 추가하고 작동하게할거다.
(ex. ui팝업을 그동안 playerController에 붙이는식으로 했는데, 그러지말고 붙일수있는 스크립트를 만들겠다는뜻)

이제 새로운 씬들을 만들어보자.
그런데 만약 씬에 EventSystem이 없다면 UI가 작동하지 않을것이다.(지난번에는 ui를 직접 create하면서 자동으로 달아주더라)
그러니 EventSystem을 프리팹으로 만들고, 씬스크립트가 시작될때, EventSystem이 있으면 가만히있고, 없으면 만들어주는 내용을 추가하자.
(Base Scene에 추가하면 모든 씬이 이걸 상속받으니 여러번 안써도되겠다.)

그리고 BaseScene에 Start대신 Awake를 사용하여 이 안에 Init을 넣으면, 후에 BaseScene을 상속받는 애들은
Start에 init을 넣지않아도, 자동으로 부모의 Awake로 인해 Init이 작동된다. (Awake = 컴포넌트를 활성화시키지 않아도 작동하는 Start라고 생각하자)

[ Scene 매니저 #2 ]
로그인씬에서 게임씬으로 넘어가는걸 구현해보자.
씬을 넘어갈때는 SceneManager를 사용하면 되는데, 얘는 우리가 만든 매니저가 아니고 기본으로 지원하는 라이브러리다!!
이때 그냥 LoadScene만 쓰면 에러가난다. build Setting이 되있지 않다고 에러남.
File-Build Settings 에서 씬을 add해줘서 등록만해주면 해결됨.

어쨋든 SceneManager를 지원하긴 하지만, 우린 우리가 원하는 기능들 구현이나 우리가 원하는 타입대로 굴리기 위해서 직접 SceneManager를 제작할 것이다. (수업은 그렇다고. 안만들어도 상관없음)



