[ 환경설정 ]
Rookiss 학습 기준 layout은 Tall을 자주쓰더라

[ 에디터 입문 ]
오브젝트를 qwer을 통해 위치 컴포넌트들을 변형시킬수있다.

(중요) ctrl + shift + F 를 통해 지금 scene에서 보고있는 위치에다 해당 요소를 위치시킬수있다.
이를 통해 메인카메라의 위치를 잡을수도 있고, 캐릭터의 시점을 잡을수도 있을듯.

[ Play 파트 ]
Unity개발은 클라이언트 개발의 일종인데, 마치 영화를 찍는것과 같다.
<각 탭별 설명>
Scene : 영화촬영장
Game : 실제로 유저에게 보여주는 화면
Hierarchy : 촬영장에 존재하는 모든 메쉬(ex. 배우 광원 카메라...
Project : 모든 메쉬들이 담겨져있는곳. 일종의 자재창고라 생각하면 편한다.
Inspector : 메쉬의 속성들을 볼수있다.

(중요) Play버튼을 누른뒤에 수정하는 모든 행동들은 저장되지 않음.(ex. 메쉬의 위치 바꾸기, 새로운 파일 넣기)
플레이중의 수정은 마치 촬영도중에 임시로 저기 가봐하고 지시하는것.
그러니 play눌러놓고 작업을 하지않도록 조심하자..(다 날라감)

[ Component 패턴 ]
 유니티는 Component구조의 집합이다. 
Component = 모든 기능을 부품화 시킨다는것.
수업도중에 만든 Cube같은 경우에도 사실은 Create Empty에 큐브를 구성하는 컴포넌트를 자동으러 넣어준것임.
그렇기에 Create Empty에다 우리가 적당한 컴포넌트를 넣는다면 위와같은 큐브를 만들수도있다.

[ 매니저 만들기 ]
어디서든 부를수있는 전역매니저를 만들어보자.(게임전체 관리를 어디든 부를수있게)
Hierarchy에다 형태가 존재하지 않는 오브젝트를 추가하면됨. (필수적이라는 의미로 @를이름에 붙이자)

Tip:컴포넌트용 C#파일과 일반C#파일을 구분해서 사용하자
MonoBehaviour = 게임 오브젝트에 붙을수있는 모든 클래스의 부모클래스 (최상위 부모상속자)
ㄴ(F12로 시그니쳐를 찾을수있다는데 왜 내껀 안되지 -> Unity-Edit-Preferences-External tools에서 비쥬얼스튜디오가 아닌 file extension으로 설정됬기때문)
// 모노비헤비어가 있기에 유니티 컴포넌트로서 작동함

[ Singleton 패턴 ]
당연하게도 유니티 UI에서 드래그드랍으로 행하는 모든 행동은 스크립트에서 코드로 작동시킬수도있다.
Player스크립트에서 Managers를 호출하도록 구현하면
Gameobject go = Gameobject.Find("@Managers")
Managers go = go.GetComponent<Managers>( );
이런식으로 스크립트내에서 다른 스크립트를 호출할수있다. (물론 이해를 위해 한거지 좋은 코드는 아님)

Singleton : static 전역변수로 하나의 유일한 인스턴스를 생성.
그렇게되면 다른 스크립트에서 호출이 있어도 전역으로 설정한 인스턴스만 사용가능 (즉, 유일성을 보장한다)
핵심 : 전역static 객체를 만들고 처음에 null이면 찾든 만들든 그 객체를 채운뒤 public static객체에 담아, 다른곳에서 사용할수있다.

유니티는 x = new x( ); 이런 기존의 C#코드가 안먹힘. (구조가달라서)
그래서 싱글턴패턴으로 GetInstance( )를 만들고 이것으로 Managers mg = Managers.GetInstance( ); 처럼 생성해야한다.


