[ 환경설정 ]
앞서만든 프레임워크들(매니저들)을 사용해서 실제로 게임을 만들어보자. 일단, 서버는 붙이지않을거다.

어셋 스토어에 있는 중세건물 어셋으로, 그리고 거기에있는 프리팹 맵에서 추가하여 만들겠다.
Terrain = 말그대로 평야,

Light -Direction Light : 그저 빛의 방향만을 정해주면, 그방향으로 빛이 들어감. 마치 태양처럼 엄청 먼곳에서 부터 오는빛 같은느낌
Point Light : 전구처럼 , 일정범위에 빛을 공급하는 근원이 됨
Spotlight : 아래방향으로 빛을쏨.

빛의 모드 : Real Time = 실시간으로 빛을계산하겠다. =움직임이 있을때마다 계산= 연산이 많아진다.
	Baked = 라이트맵이 켜질때, 그때의 그림자 등 빛을 계산해서 그대로 쭉 쓰겠다. => 움직임이 없는 물체에 적합하다. (그러나 움직임이 있는애는 아예 캐치를 못하는듯)
=> 개발할때는 막 물체를 넣다뺏다하는데, 그때마다 lightMap을 업데이트하면 연산 쓸데없이 많이드니까, Window-Rendering-LightMap에서 AutoGenerate를 꺼주고 나중에 쓸때 한번 연산하곤한다.

[ 이동 ]
건물위로 올라가는걸 막고싶다. => Navigation Mesh를 이용해서, 여기는 못가는곳이다 라고 알려줌.
windows - AI- Navigation
베이크의 맨위를 보면 무슨 그래프같은게 있는데, 이게 nav mesh로 못가는부분을 베이크할때, 못가는부분의 조건을 시각화 한것이다.
파란실린더가 캐릭터(에이전트)를 의미함.
씬을 베이크해줘서 못가는 지역을 처리해주고, Nav Mesh Agent 컴포넌트를 이제 이동할 주체(캐릭터)에다가 달아주면, NavMeshAgent라이브러리를 사용해서 코드를 짤 수 있다.

[ 스탯 ]
그냥 스탯값을 넣을수있는 스크립트를 만들어 Contents에 추가했다.

[ 마우스 커서 ]
커서는 결국 2d이미지를 마우스커서에 붙여서 사용하는 건데, 텍스쳐에 가서 texture type을 Cursor로 하던가 Sprite(2d and UI)로 하는방법이 있다.
Cursor로 하는게 간단함.
플레이어컨트롤을 하면서 마우스를 자주움직이니까, 여기다가 마우스커서의 변화 로직을 추가했다.
UpdateMouseCursor() => 마우스 좌표에 레이캐스팅을해, 몬스터위에 마우스가 있으면 Attack모양으로, 땅위에있으면 Hand가 되게했다.

[ 타게팅 락온 ]
디아블로 스타일로 마우스이동 로직을 짤건데
1. 처음 누르는게 땅이면 이동, 몬스터면 가서 공격
2. 땅을 누른후에 꾹눌러서 다른좌표로 움직이면 연속적으로 이동.
3. 몬스터를 누른후에 꾹눌러서 다른좌표로 움직이면, 처음 의도대로 그냥 공격
(3이 새롭게 구현해야될것임)

[ 공격 ]
일단 PlayerController의 UpdateMouseCursor을 지우고 그내용을 새로만든 CursorController에 넣었다.

! 참고로 애니메이션을 보여줄때는
1. 패러미터와 transition을 통해서 애니메이션간의 연결을 다루는 방법도 있고
2. Play를 통해서 애니메이션 자체를 틀어주는 방법도 있고(이 경우 블렌딩 필요)
3. CrossFade를 통해 애니메이션 틀어주기 + 블렌딩이 되는 방법도 있다.
각각 장단점이 있음

[ 체력게이지 ]
인게임 세상에 3D UI를 붙이는작업이다.
2d UI는 게임세상과는 별개인 UI이지만 3d는 인게임내의 배치하는 객체처럼 작업한다.

캔버스의 렌더모드에서 위 차이를 만들수있는데, Screen Space - Overlay를하면, 마지막에 스크린에 탁 붙이겠다는 의미이고,
3d세상에 넣고싶으면 worldSpace로 바꿔주면된다.

빌보드 : UI가 항상 카메라를 쳐다보거나, 카메라가 보는방향을 보게해서, 카메라에서는 항상 같은면만을 보이게한다.(HP바 같은 ui가 화면에 계속 같은방향으로 보이게할때 유용)

[ 몬스터 AI ]
사실 별거없었다. 
ai라고해봤자, 플레이어의 위치를 지속적으로 업데이트하다가, 애드범위내에 들어오면 쫓아가서 공격을 하게하는 정도였는데,
결국은 플레이어 애니메이션을 짰던것과 같이, 몬스터의 애니메이션 State만을 적절히 변경시켜주면 된다
또한 NaviMesh Agent의 길찾기를 통해서 몬스터가 플레이어에게 자동으로 찾아올수있도록 하여, 경로 문제는 쉽게 해결할수있었다.

[ Destroy ]
!!생각해보면 class는 참조를 이용한것인데, type = null 이렇게 넣어주면, 해당 코드 외의 다른 스크립트에서도 null로 인식된다. <-이게핵심. 엄청 대단한거임. 각각의 참조를 끊어주지 않아도 한번에 끊긴다는게말이다.
(사실 실제로 끊는건 아니고 "null"로 바꿔주는 건데, 여기에 연결이 되면 null처럼 작동하게 하는 로직이다. 그리고 나중에 모든 참조가 끊어져서 "null"로의 참조조차 모두 없어진다면 그제야 메모리에서 없애는것임)

[ 레벨 업 ]
플레이어 스탯란에 넣어놨던 exp의 set을 수정하여, 자신의 현재 경험치와 딕셔너리에 들어간 totalExp를 비교하여
레벨업을 하는 렙업 체크 시스템을 만들었다.

// 그런데 이러면 매번 체크시스템이 돌아서, 메모리 부하가 심하지않을까? 모르겠네

[ 몬스터 자동 생성 ]
몬스터의 개채수가 유지되게, 몬스터를 자동으로 생성(리스폰)하는 코드를 만들어보자
(사실 나중에 서버에서 이를 유지하는게 좋은데, 지금은 서버를 모르니까 클라에서 만들게해보자. )
게임매니저에서 몬스터가 생겨나면 Invoke를 해서 알아서 신호를 가져가도록한뒤에,
새로운 SpawningPool이라는 스크립트를 만들어, 해당 invoke에 따라 현재 개체수와 조절하여 생성하게 하면 되겠다.

몬스터가 생성될수 있는 위치를 파악하기위해선, NavMeshAgent를 통해 실제로 갈수있는지 길찾기를 해보면된다! (이거 히트네)

//지금 몬스터가 죽은뒤에 그대로 풀로 들어가서, 리스폰됬을때 체력재생이 안되고, state도 Skill상태에서 죽어 AI가 꼬이고있다. 아마 스폰단계나 풀링단계에 문제가있는듯하다.
설마 교수는 몬스터를 풀러블 로 안했나? 그러면 애들이 새로 생성되는거니까 체력도 만피고, 시작 state도 Idle일것임.
근데 이러면 플레이어가 스킬모션을 계속 유지할수가없는데.. null값의 위치를 참조하려들어서 에러남
==> 정답은 풀러블이 문제였다. 위처럼 내가 추측한내용이 맞았고, 스킬모션을 유지할수 없었던 곳에는, if(_lockTarget!=null) 조건문을 넣어, null이면 업데이트 되지않게했다.(어쩌피 스킬로직이 아니라 모션을 틀어주는 방향에 관한내용이라 업데이트 되지않아도 문제없었다.=>이게 맘에안들면 null일때 상태를 Idle로 가게하면될거같음)

