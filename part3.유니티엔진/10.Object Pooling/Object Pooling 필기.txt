[ Pool 매니저 #1 ]
Pooling : 어딘가에 저장된 리소스(프리팹이나 스크립트나 등등)를 메모리에 불렀다가, 메모리에 있는 걸 다시 Instantiate해서 씬에 배치하는게 메모리도 많이먹고 오래걸림(애당초 ssd와 cpu사이 물리적 거리가 있기때문)
그래서 이 과정을 효율적으로 만드는것을 Pooling이라 한다. 
지난번에 한 Sound Manager에서 effect사운드 처럼, 이미 읽어온애는 리스트에 담아서 Load를 여러번 안쓰게 하던것도 풀링의 한종류다.
말그래도 Pool에다가 풀링오브젝트들을 담아놓고 필요할때 꺼내쓰는것.

우리는 object를 풀링할 것이라서 object pooling이라 하는것.

사실 안해도 게임은 만들수있다. 그런데 점점 대규모가 되고 슬슬 성능을 향상시켜야되는 상황이오면 object pooling이 필요하다.

우리가 오브젝트 풀링을 할 방법은 다음과 같다.
씬에 여러 유니티짱이 있는데, 그 중 몇개는 지금당장은 쓰지않지만 그렇다고 필요할때 생성하기에는 메모리 부담이 된다.
그렇기에 일단 생성해두고, 비활성화 시켜서 제 3의 공간으로 날려 안보이게 했다가, 필요할때 다시 활성화시켜 사용하면 될 것이다.

!! 풀링이 필요한 객체에는 풀링컴포넌트(=poolable)를 만들어 붙여서 알아볼수있게하면되겟다.!!

[ Pool 매니저 #2,3 ]
PoolManager와 ResourceManager스크립트를 보고 공부하는게 나을듯.
Pool의 개념자체는 말그대로 안쓰는애들이 놀면서 쉴 수 있는 Pool(수영장)을 만들고 필요할때마다 거깄는 애들 불러다 쓴다는 간단한 이론이다.
